<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        V9lQOLL4fJbojqSecLDhatvYDTYuy+0v+XG3Ce15X9j4Sk7MyTdOLTnTcSrjzpYt8xQl5yWAIRBWvrJb
        0R+eGmI/fl+Qtm+J0vYtUtr+JSat7FqTdoBWvtRHK7/ORzu0zEd7bbmvdniFr3bketoNftpRHo/xeOxG
        f+0oj8dvDNDtmG5dtOM3Bbhep/HI8wK01/kbf3cdWdFFO7qiq3ZsRRfXa8u78nuA69Byf97b31W+IoDP
        83cdXObvOrDUj8/31w5c48fx+Ln2XeOr7b/Gx7V/iS/H6qOVLPLR9i720fYsMmm7okzazgW0+UrbMY82
        V2nb5yitiN8P3NlNe/1XQ5z77upxLPdqRXl6Cdg6W3XZGaWmlyxVj5Rco6L3LKDNV9F7eSxZqKJLafuj
        VHTZIhV9YDFtiYouF7tWRR+ivea1w0tVtNiR62jLvLacR4+t9h6N76vk+1HaYZ4rxmtWvybG68vFrlWr
        D/LeBzgmPnPVfj6bjllVukitLomicVwy1t3z1epd81T0zrlq9Y45KrroahW9/SoVvW22it46S0Vzdosu
        4HErz9kWpZ7Mm6sWpk/19Alap0Ge6Ft0lerGi83FtJ1zlHnXXNo8Zd5D20srma/MpQuUed9CZd5PIyHm
        A4tU0EEexcoXf2mHFqugQ0uU2WuB+nGxCtR/9xw9n3l9+SIVWB5Fk3tFqW60IN47sGyhCuJzgvjMwNL5
        KrBkngriOIL2eMYVJOOTse6gcezm7bOVmTjMBGzOn6HMebQtVygzaxwzq1xzNi1zmgriUr/1PWIrAW3L
        w45/lldmLCj4zlB/dcYKS38poTmVmzW3y26nteibKbSmRqXV1ytnfa2y11Yre02VsldVKGvVWWWtPKNa
        ztEqziirWOVZZas8p2zVFcpWU61sPN9WV6PsXNI6GxqUs7mJ+5N4Xxvva7Ppr+td3LPg5nP159PkTbY+
        JjG+1NHHeZGewCUS8M1t546T+f3c6/8BjQ4K/cA7SD0AAAAASUVORK5CYII=
</value>
  </data>
</root>