using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using DataAvail.XObject.XContexts;
using DataAvail.XObject.XOP;
using DataAvail.XObject.XWP;
using DataAvail.XObject.XSP;


namespace DataAvail.XObject
{
    public class XOFieldContext
    {
        public XOFieldContext(XOTableContext XTable, XOField XOField)
        {
            _xOTable = XTable;

            _xOField = XOField;
        }

        private readonly XOTableContext _xOTable;

        private readonly XOField _xOField;

        private bool IsChildContextsParentRelationField
        {
            get
            {
                return this.ParentRelation != null && TableContext.IsChildContext && ((XChildContext)TableContext.Context).ParentFieldContext.XOField == this.ParentRelation.ParentField;
            }
        }

        public XOTableContext TableContext
        {
            get { return _xOTable; }
        }

        public XOField XOField
        {
            get { return _xOField; }
        } 

        public string Name
        {
            get { return XOField.Name; }
        }

        public string Caption
        {
            get { return XOField.Caption; }
        }

        public XOFieldCalculator Calculator
        {
            get { return XOField.Calculator; }
        }

        public XOTable ParentRelationTable
        {
            get { return XOField.ParentRelation.ParentTable; }
        }

        public XORelation ParentRelation
        {
            get { return XOField.ParentRelation; }
        }


        public string SpecifiedControlType
        {
            get { return XOField.SpecifiedControlType; }
        }

        public Type FieldType
        {
            get { return XOField.FieldType; }
        }

        public bool IsFkChildField
        {
            get { return XOField.IsFkChildField; }
        }

        public bool IsCanView
        {
            get { return TableContext.IsCanView && XOField.IsCanView; }
        }

        public bool IsCanEdit
        {
            get 
            {
                return
                    TableContext.IsCanEdit
                    && XOField.IsCanEdit
                    && !IsChildContextsParentRelationField;
            }
        }

        public XWPFieldMask Mask
        {
            get { return XOField.Mask; }
        }

        public bool IsPk
        {
            get { return XOField.IsPk; }
        }

        public bool IsPkAutoGenerated
        {
            get { return XOField.IsPkAutoGenerated; }
        }

        public bool IsMapped
        {
            get { return XOField.IsMapped; }
        }

        public XWPFieldFkInterfaceType FkInterfaceType
        {
            get { return XOField.FkInterfaceType; }
        }

        public string BindingProperty 
        {
            get { return XOField.BindingProperty; }
        }
    }
}
