using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Data;

namespace DataAvail.Data.DataAdapter
{
    public abstract class DataAdapterTable : DataAdapterUpdate<System.Data.DataRow>
    {
        public DataAdapterTable(System.Data.IDbConnection DbConnection, DataAvail.Data.Function.Function Delete, DataAvail.Data.Function.Function Update, DataAvail.Data.Function.Function Insert)
            : base(DbConnection, Insert, Update, Delete)
        { }

        protected override IEnumerable<DataRow> GetDeletedItems(IEnumerable<object> Objects)
        {
            return GetRows(Objects, DataRowState.Deleted);
        }

        protected override IEnumerable<DataRow> GetInsertedItems(IEnumerable<object> Objects)
        {
            return GetRows(Objects, DataRowState.Added);
        }

        protected override IEnumerable<DataRow> GetModifyedItems(IEnumerable<object> Objects)
        {
            return GetRows(Objects, DataRowState.Modified);
        }

        protected override IDictionary<string, object> GetItemValues(DataRow Item)
        {
            return Item.Table.Columns.Cast<System.Data.DataColumn>().ToDictionary(k => k.ColumnName, v => Item[v.ColumnName, Item.RowState == DataRowState.Deleted ? DataRowVersion.Original : DataRowVersion.Current]);
        }

        private IEnumerable<DataRow> GetRows(IEnumerable<object> Objects, System.Data.DataRowState DataRowState)
        {
            return Objects.Cast<System.Data.DataRow>().Where(p => p.RowState == DataRowState);
        }

        protected override void SetPrimaryKey(DataRow Item, object Value)
        {
            Item[Item.Table.PrimaryKey[0]] = Value;
        }

        protected override object GetPrimaryKey(DataRow Item)
        {
            return Item[Item.Table.PrimaryKey[0]];
        }

        protected override string GetPrimaryKeyName(DataRow Item)
        {
            return Item.Table.PrimaryKey[0].ColumnName;
        }

        protected override bool IsPrimaryKeyAutoGenerated
        {
            get
            {
                return true;
            }
        }
    }
}
